package org.example;

import org.telegram.telegrambots.meta.api.objects.Update;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.InlineKeyboardMarkup;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.buttons.InlineKeyboardButton;

import java.util.*;

public class GameFunctions {
    private final MessageSender messageSender;
    private boolean isPlay;
    private String themeFitness;
    private String themeGames;
    private String themeSelfDevelopment;
    private String themeTalking;
    private String themeCooking;
    private HashMap<Integer, String> themes = new HashMap<>();
    private String selectedTheme = null;


    public GameFunctions(MessageSender messageSender) {
        this.messageSender = messageSender;
    }

    public void startGame(Update update) {
        String callbackData = update.getCallbackQuery().getData();
        long chatId = update.getCallbackQuery().getMessage().getChatId();

        if (selectedTheme != null && !callbackData.equals("–ù–∞—á–∞—Ç—å –Ω–æ–≤—ã–π –∫–≤–µ—Å—Ç")) {
            messageSender.sendText(chatId, "–í—ã —É–∂–µ –≤—ã–±—Ä–∞–ª–∏ —Ç–µ–º—É: " + selectedTheme);
            return;
        }

        themeFitness = changeFitnessTheme(themes);
        themeGames = changeGameTheme(themes);
        themeSelfDevelopment = changeSelfDevelopmentTheme(themes);
        themeTalking = changeTalkingTheme(themes);
        themeCooking = changeCookingTheme(themes);

        switch (callbackData) {
            case "Fitness" -> {
                selectedTheme = "–§–∏—Ç–Ω–µ—Å";
                messageSender.sendText(chatId, "–í–æ—Ç —Ä–∞–Ω–¥–æ–º–Ω–æ–µ –∑–∞–¥–∞–Ω–∏–µ –Ω–∞ —Ç–µ–º—É —Ñ–∏—Ç–Ω–µ—Å–∞: " + themeFitness);
                sendNewGameButton(chatId);
            }
            case "Games" -> {
                selectedTheme = "–†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è";
                messageSender.sendText(chatId, "–í–æ—Ç —Ä–∞–Ω–¥–æ–º–Ω–æ–µ –∑–∞–¥–∞–Ω–∏–µ –Ω–∞ —Ç–µ–º—É –∏–≥—Ä: " + themeGames);
                sendNewGameButton(chatId);
            }
            case "SelfDevelopment" -> {
                selectedTheme = "–°–∞–º–æ—Ä–∞–∑–≤–∏—Ç–∏–µ";
                messageSender.sendText(chatId, "–í–æ—Ç —Ä–∞–Ω–¥–æ–º–Ω–æ–µ –∑–∞–¥–∞–Ω–∏–µ –Ω–∞ —Ç–µ–º—É —Å–∞–º–æ—Ä–∞–∑–≤–∏—Ç–∏—è: " + themeSelfDevelopment);
                sendNewGameButton(chatId);
            }
            case "Talking" -> {
                selectedTheme = "–û–±—â–µ–Ω–∏–µ";
                messageSender.sendText(chatId, "–í–æ—Ç —Ä–∞–Ω–¥–æ–º–Ω–æ–µ –∑–∞–¥–∞–Ω–∏–µ –Ω–∞ —Ç–µ–º—É –æ–±—â–µ–Ω–∏—è: " + themeTalking);
                sendNewGameButton(chatId);
            }
            case "Cooking" -> {
                selectedTheme = "–ö—É–ª–∏–Ω–∞—Ä–∏—è";
                messageSender.sendText(chatId, "–í–æ—Ç —Ä–∞–Ω–¥–æ–º–Ω–æ–µ –∑–∞–¥–∞–Ω–∏–µ –Ω–∞ —Ç–µ–º—É –∫—É–ª–∏–Ω–∞—Ä–∏–∏: " + themeCooking);
                sendNewGameButton(chatId);
            }
            case "–ù–∞—á–∞—Ç—å –Ω–æ–≤—ã–π –∫–≤–µ—Å—Ç" -> {
                resetGameState();
                sendButtonsTypeQuest(chatId);
            }
            case "–í—ã–±—Ä–∞—Ç—å –¢–µ–º—É" -> sendButtonsTypeQuest(chatId);
            default -> System.out.println("Error");
        }
    }

    private void resetGameState() {
        selectedTheme = null;
        isPlay = false;
        themes.clear();
    }

    void sendButtonsTypeQuest(long chatID) {
        List<InlineKeyboardButton> row = new ArrayList<>();
        row.add(InlineKeyboardButton.builder().text("\uD83C\uDFCB\uFE0F –§–∏—Ç–Ω–µ—Å").callbackData("Fitness").build());
        row.add(InlineKeyboardButton.builder().text("\uD83C\uDFAE –†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è").callbackData("Games").build());
        row.add(InlineKeyboardButton.builder().text("\uD83D\uDCDA –°–∞–º–æ—Ä–∞–∑–≤–∏—Ç–∏–µ").callbackData("SelfDevelopment").build());
        row.add(InlineKeyboardButton.builder().text("\uD83D\uDCAC –û–±—â–µ–Ω–∏–µ ").callbackData("Talking").build());
        row.add(InlineKeyboardButton.builder().text("\uD83C\uDF73 –ö—É–ª–∏–Ω–∞—Ä–∏—è").callbackData("Cooking").build());
        List<List<InlineKeyboardButton>> rows = Collections.singletonList(row);
        InlineKeyboardMarkup keyboardMarkup = new InlineKeyboardMarkup();
        keyboardMarkup.setKeyboard(rows);
        messageSender.sendMenu(chatID, "–í—ã–±–∏—Ä–∞–π –Ω–∞ –∫–∞–∫—É—é —Ç–µ–º—É —Ö–æ—á–µ—à—å –ø–æ–ª—É—á–∏—Ç—å –∫–≤–µ—Å—Ç \uD83D\uDC7A", keyboardMarkup);
    }

    private void sendNewGameButton(long chatID) {
        InlineKeyboardButton button = InlineKeyboardButton.builder()
                .text("–ù–∞—á–∞—Ç—å –Ω–æ–≤—ã–π –∫–≤–µ—Å—Ç").callbackData("–ù–∞—á–∞—Ç—å –Ω–æ–≤—ã–π –∫–≤–µ—Å—Ç")
                .build();

        List<InlineKeyboardButton> row = new ArrayList<>();
        row.add(button);

        InlineKeyboardMarkup keyboardMarkup = new InlineKeyboardMarkup();
        keyboardMarkup.setKeyboard(Collections.singletonList(row));
        messageSender.sendMenu(chatID, "üéÆ –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –Ω–æ–≤—ã–π –∫–≤–µ—Å—Ç!", keyboardMarkup);
    }

    public String changeFitnessTheme(HashMap<Integer, String> themes) {
        themes.put(1, "20 –æ—Ç–∂–∏–º–∞–Ω–∏–π –Ω–∞ –∫—É–ª–∞–∫–∞—Ö");
        themes.put(2, "10 –æ—Ç–∂–∏–º–∞–Ω–∏–π –Ω–∞ –∫—É–ª–∞–∫–∞—Ö");
        themes.put(3, "15 –æ—Ç–∂–∏–º–∞–Ω–∏–π –Ω–∞ –∫—É–ª–∞–∫–∞—Ö");
        themes.put(4, "20 –æ—Ç–∂–∏–º–∞–Ω–∏–π");
        themes.put(5, "15 –æ—Ç–∂–∏–º–∞–Ω–∏–π");
        themes.put(6, "10 –æ—Ç–∂–∏–º–∞–Ω–∏–π");
        themes.put(7, "10 –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π –ø—Ä–µ—Å—Å–∞ (—Å–∫—Ä—É—á–∏–≤–∞–Ω–∏—è)");
        themes.put(8, "20 –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π –ø—Ä–µ—Å—Å–∞ (—Å–∫—Ä—É—á–∏–≤–∞–Ω–∏—è)");
        themes.put(9, "30 –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π –ø—Ä–µ—Å—Å–∞ (—Å–∫—Ä—É—á–∏–≤–∞–Ω–∏—è)");
        themes.put(10, "15 –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π –ø—Ä–µ—Å—Å–∞ (—Å–∫—Ä—É—á–∏–≤–∞–Ω–∏—è)");
        themes.put(11, "15 –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π –ø—Ä–∏—Å–µ–¥–∞–Ω–∏–π");
        themes.put(12, "20 –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π –ø—Ä–∏—Å–µ–¥–∞–Ω–∏–π");
        themes.put(13, "30 –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π –ø—Ä–∏—Å–µ–¥–∞–Ω–∏–π");

        Random random = new Random();
        int randomKey = random.nextInt(themes.size()) + 1;
        return themes.get(randomKey);
    }

    public String changeGameTheme(HashMap<Integer, String> themes) {
        themes.put(1, "–°—ã–≥—Ä–∞—Ç—å –≤ –ø—Ä—è—Ç–∫–∏");
        themes.put(2, "–ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –Ω–∞—Å—Ç–æ–ª—å–Ω—É—é –∏–≥—Ä—É, –∫–æ—Ç–æ—Ä—É—é —Ä–∞–Ω—å—à–µ –Ω–µ –∏–≥—Ä–∞–ª");
        themes.put(3, "–£—Å—Ç—Ä–æ–∏—Ç—å –º–∏–Ω–∏-—Ç—É—Ä–Ω–∏—Ä –ø–æ –Ω–∞—Å—Ç–æ–ª—å–Ω—ã–º –∏–≥—Ä–∞–º");
        themes.put(4, "–ü—Ä–∏–¥—É–º–∞—Ç—å –∏ —Å—ã–≥—Ä–∞—Ç—å –≤ —Å–≤–æ—é —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—É—é –∏–≥—Ä—É");
        themes.put(5, "–°—ã–≥—Ä–∞—Ç—å –ø–∞—Ä—Ç–∏—é –≤ —à–∞—Ö–º–∞—Ç—ã –∏–ª–∏ —à–∞—à–∫–∏");
        themes.put(6, "–û—Ä–≥–∞–Ω–∏–∑–æ–≤–∞—Ç—å –∫–≤–µ—Å—Ç –Ω–∞ —É–ª–∏—Ü–µ –∏–ª–∏ –≤ –ø–æ–º–µ—â–µ–Ω–∏–∏");
        themes.put(7, "–°—ã–≥—Ä–∞—Ç—å –≤ –∫–ª–∞—Å—Å–∏—á–µ—Å–∫—É—é –∫–∞—Ä—Ç–æ—á–Ω—É—é –∏–≥—Ä—É");
        themes.put(8, "–ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –Ω–æ–≤—É—é –≤–∏–¥–µ–æ–∏–≥—Ä—É");
        themes.put(9, "–û—Ä–≥–∞–Ω–∏–∑–æ–≤–∞—Ç—å –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã–π –∏–≥—Ä–æ–≤–æ–π –≤–µ—á–µ—Ä —Å –¥—Ä—É–∑—å—è–º–∏");
        themes.put(10, "–ü—Ä–∏–¥—É–º–∞—Ç—å –∏ –ø—Ä–æ–≤–µ—Å—Ç–∏ –≤–∏–∫—Ç–æ—Ä–∏–Ω—É");
        themes.put(11, "–ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–≤–æ–∏ —Å–∏–ª—ã –≤ –Ω–æ–≤–æ–º –≤–∏–¥–µ —Å–ø–æ—Ä—Ç–∞");
        themes.put(12, "–ü—Ä–∏–¥—É–º–∞—Ç—å –∏ –ø—Ä–æ–≤–µ—Å—Ç–∏ –∏–≥—Ä–æ–≤–æ–µ –∑–∞–Ω—è—Ç–∏–µ –¥–ª—è –¥–µ—Ç–µ–π");
        themes.put(13, "–°—ã–≥—Ä–∞—Ç—å –≤ –Ω–∞—Å—Ç–æ–ª—å–Ω—É—é —Ä–æ–ª–µ–≤—É—é –∏–≥—Ä—É");

        Random random = new Random();
        int randomKey = random.nextInt(themes.size()) + 1;
        return themes.get(randomKey);
    }

    public String changeSelfDevelopmentTheme(HashMap<Integer, String> themes) {
        themes.put(1, "–ü—Ä–æ—á–∏—Ç–∞—Ç—å –∫–Ω–∏–≥—É –æ –ª–∏—á–Ω–æ—Å—Ç–Ω–æ–º —Ä–æ—Å—Ç–µ");
        themes.put(2, "–í—ã—É—á–∏—Ç—å 10 –Ω–æ–≤—ã—Ö —Å–ª–æ–≤ –Ω–∞ –∏–Ω–æ—Å—Ç—Ä–∞–Ω–Ω–æ–º —è–∑—ã–∫–µ");
        themes.put(3, "–ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –º–æ—Ç–∏–≤–∞—Ü–∏–æ–Ω–Ω–æ–µ –≤–∏–¥–µ–æ");
        themes.put(4, "–ù–∞–ø–∏—Å–∞—Ç—å —Å–ø–∏—Å–æ–∫ —Ü–µ–ª–µ–π –Ω–∞ –±–ª–∏–∂–∞–π—à–∏–π –º–µ—Å—è—Ü");
        themes.put(5, "–°–æ—Å—Ç–∞–≤–∏—Ç—å –ø–ª–∞–Ω –¥–Ω—è –∏ —Å–ª–µ–¥–æ–≤–∞—Ç—å –µ–º—É");
        themes.put(6, "–ó–∞–Ω—è—Ç—å—Å—è –º–µ–¥–∏—Ç–∞—Ü–∏–µ–π –∏–ª–∏ –π–æ–≥–æ–π");
        themes.put(7, "–û—Å–≤–æ–∏—Ç—å –Ω–æ–≤—É—é —Ç–µ—Ö–Ω–∏–∫—É —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤—Ä–µ–º–µ–Ω–µ–º");
        themes.put(8, "–ü–æ—Å–µ—Ç–∏—Ç—å –æ–Ω–ª–∞–π–Ω-–∫—É—Ä—Å –∏–ª–∏ –≤–µ–±–∏–Ω–∞—Ä");
        themes.put(9, "–ù–∞—á–∞—Ç—å –≤–µ—Å—Ç–∏ –¥–Ω–µ–≤–Ω–∏–∫ –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç–∏");
        themes.put(10, "–ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –Ω–æ–≤—ã–π –≤–∏–¥ —Ç–≤–æ—Ä—á–µ—Å—Ç–≤–∞ –∏–ª–∏ —Ö–æ–±–±–∏");
        themes.put(11, "–ü–æ—Å–ª—É—à–∞—Ç—å –ø–æ–¥–∫–∞—Å—Ç –Ω–∞ —Ç–µ–º—É —Å–∞–º–æ—Ä–∞–∑–≤–∏—Ç–∏—è");
        themes.put(12, "–ü—Ä–æ–≤–µ—Å—Ç–∏ —Ü–∏—Ñ—Ä–æ–≤–æ–π –¥–µ—Ç–æ–∫—Å –Ω–∞ –æ–¥–∏–Ω –¥–µ–Ω—å");
        themes.put(13, "–ò–∑—É—á–∏—Ç—å –æ—Å–Ω–æ–≤—ã —Ñ–∏–Ω–∞–Ω—Å–æ–≤–æ–π –≥—Ä–∞–º–æ—Ç–Ω–æ—Å—Ç–∏");

        Random random = new Random();
        int randomKey = random.nextInt(themes.size()) + 1;
        return themes.get(randomKey);
    }

    public String changeTalkingTheme(HashMap<Integer, String> themes) {
        themes.put(1, "–£—Å—Ç—Ä–æ–∏—Ç—å –≤–µ—á–µ—Ä –≤–æ—Å–ø–æ–º–∏–Ω–∞–Ω–∏–π —Å –¥—Ä—É–∑—å—è–º–∏");
        themes.put(2, "–û–±—Å—É–¥–∏—Ç—å –∏–Ω—Ç–µ—Ä–µ—Å–Ω—É—é –∫–Ω–∏–≥—É –∏–ª–∏ —Ñ–∏–ª—å–º");
        themes.put(3, "–ü—Ä–æ–≤–µ—Å—Ç–∏ –¥–µ–±–∞—Ç—ã –Ω–∞ –∞–∫—Ç—É–∞–ª—å–Ω—É—é —Ç–µ–º—É");
        themes.put(4, "–ü–æ–¥–µ–ª–∏—Ç—å—Å—è —Å–≤–æ–∏–º–∏ –º–µ—á—Ç–∞–º–∏ –∏ —Ü–µ–ª—è–º–∏");
        themes.put(5, "–û–±—Å—É–¥–∏—Ç—å –ø–ª–∞–Ω—ã –Ω–∞ –±—É–¥—É—â–µ–µ");
        themes.put(6, "–£–∑–Ω–∞—Ç—å —á—Ç–æ-—Ç–æ –Ω–æ–≤–æ–µ –æ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–µ");
        themes.put(7, "–†–∞—Å—Å–∫–∞–∑–∞—Ç—å –¥—Ä—É–≥ –¥—Ä—É–≥—É –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ –∏—Å—Ç–æ—Ä–∏–∏ –∏–∑ –∂–∏–∑–Ω–∏");
        themes.put(8, "–ü–æ–≥–æ–≤–æ—Ä–∏—Ç—å –æ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –Ω–æ–≤–æ—Å—Ç—è—Ö –∏ —Å–æ–±—ã—Ç–∏—è—Ö");
        themes.put(9, "–£—Å—Ç—Ä–æ–∏—Ç—å –≤–µ—á–µ—Ä –≤–æ–ø—Ä–æ—Å–æ–≤ –∏ –æ—Ç–≤–µ—Ç–æ–≤");
        themes.put(10, "–û—Ä–≥–∞–Ω–∏–∑–æ–≤–∞—Ç—å –¥—Ä—É–∂–µ—Å–∫–∏–π —Ç—É—Ä–Ω–∏—Ä –ø–æ –Ω–∞—Å—Ç–æ–ª—å–Ω—ã–º –∏–≥—Ä–∞–º");
        themes.put(11, "–û–±—Å—É–¥–∏—Ç—å –ª—é–±–∏–º—ã–µ –º—É–∑—ã–∫–∞–ª—å–Ω—ã–µ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–∏ –∏ –ø–µ—Å–Ω–∏");
        themes.put(12, "–ü–æ–¥–µ–ª–∏—Ç—å—Å—è –ø–æ–ª–µ–∑–Ω—ã–º–∏ —Å–æ–≤–µ—Ç–∞–º–∏ –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è–º–∏");
        themes.put(13, "–û–±—Å—É–¥–∏—Ç—å –ø–ª–∞–Ω—ã –Ω–∞ –≤—ã—Ö–æ–¥–Ω—ã–µ –∏–ª–∏ –æ—Ç–ø—É—Å–∫");

        Random random = new Random();
        int randomKey = random.nextInt(themes.size()) + 1;
        return themes.get(randomKey);
    }

    public String changeCookingTheme(HashMap<Integer, String> themes) {
        themes.put(1, "–ü—Ä–∏–≥–æ—Ç–æ–≤–∏—Ç—å –Ω–æ–≤–æ–µ –±–ª—é–¥–æ –∏–∑ –∫—É—Ö–Ω–∏ –¥—Ä—É–≥–æ–π —Å—Ç—Ä–∞–Ω—ã");
        themes.put(2, "–ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –ø—Ä–∏–≥–æ—Ç–æ–≤–∏—Ç—å –∑–¥–æ—Ä–æ–≤—ã–π –∑–∞–≤—Ç—Ä–∞–∫");
        themes.put(3, "–ò—Å–ø–µ—á—å –ø–∏—Ä–æ–≥ –∏–ª–∏ –∫–µ–∫—Å—ã");
        themes.put(4, "–£—Å—Ç—Ä–æ–∏—Ç—å –≤–µ—á–µ—Ä –≥—Ä–∏–ª—è —Å –¥—Ä—É–∑—å—è–º–∏");
        themes.put(5, "–ü—Ä–∏–≥–æ—Ç–æ–≤–∏—Ç—å –±–ª—é–¥–æ –∏–∑ —Å–µ–∑–æ–Ω–Ω—ã—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤");
        themes.put(6, "–ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–≤–æ–∏ —Å–∏–ª—ã –≤ –≤–µ–≥–µ—Ç–∞—Ä–∏–∞–Ω—Å–∫–æ–π –∫—É—Ö–Ω–µ");
        themes.put(7, "–°–¥–µ–ª–∞—Ç—å –¥–æ–º–∞—à–Ω–∏–µ –∫–æ–Ω—Ñ–µ—Ç—ã –∏–ª–∏ –ø–µ—á–µ–Ω—å–µ");
        themes.put(8, "–ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –ø—Ä–∏–≥–æ—Ç–æ–≤–∏—Ç—å –±–ª—é–¥–æ –∏–∑ –Ω–æ–≤–æ–π –∫—É–ª–∏–Ω–∞—Ä–Ω–æ–π –∫–Ω–∏–≥–∏");
        themes.put(9, "–û—Ä–≥–∞–Ω–∏–∑–æ–≤–∞—Ç—å –∫—É–ª–∏–Ω–∞—Ä–Ω—ã–π –º–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å –¥–ª—è –¥—Ä—É–∑–µ–π");
        themes.put(10, "–ü—Ä–∏–≥–æ—Ç–æ–≤–∏—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –±–ª—é–¥ –¥–ª—è –ø–∏–∫–Ω–∏–∫–∞ –Ω–∞ –ø—Ä–∏—Ä–æ–¥–µ");
        themes.put(11, "–ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –ø—Ä–∏–≥–æ—Ç–æ–≤–∏—Ç—å –±–ª—é–¥–æ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –Ω–µ–æ–±—ã—á–Ω—ã—Ö —Å–ø–µ—Ü–∏–π");
        themes.put(12, "–£—Å—Ç—Ä–æ–∏—Ç—å –≤–µ—á–µ—Ä –∫—É–ª–∏–Ω–∞—Ä–Ω—ã—Ö —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–æ–≤");
        themes.put(13, "–ü—Ä–∏–≥–æ—Ç–æ–≤–∏—Ç—å –∏–∑—ã—Å–∫–∞–Ω–Ω–æ–µ –±–ª—é–¥–æ –¥–ª—è —Ä–æ–º–∞–Ω—Ç–∏—á–µ—Å–∫–æ–≥–æ —É–∂–∏–Ω–∞");

        Random random = new Random();
        int randomKey = random.nextInt(themes.size()) + 1;
        return themes.get(randomKey);
    }

    public boolean isPlay() {
        return isPlay;
    }

    public void setPlay(boolean play) {
        isPlay = play;
    }

}
